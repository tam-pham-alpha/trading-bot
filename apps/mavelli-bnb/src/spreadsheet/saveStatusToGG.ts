import { GoogleSpreadsheet } from 'google-spreadsheet';

import { PRIVATE_KEY, CLIENT_EMAIL, GG_SPREADSHEET_ID } from './auth';

const SHEET_TITLE = 'MasterConfig';

export type SystemStatus = {
  timestamp: number;
  totalAssets: number;
  purchasingPower: number;
  buyingTokens: string;
  liveOrders: string;
};

export const saveStatusToGG = async (data: SystemStatus) => {
  console.log('saveStatusToGG', data);
  // Initialize the sheet - doc ID is the long id in the sheets URL
  const doc = new GoogleSpreadsheet(GG_SPREADSHEET_ID);

  // Initialize Auth - see https://theoephraim.github.io/node-google-spreadsheet/#/getting-started/authentication
  await doc.useServiceAccountAuth({
    // env var values are copied from service account credentials generated by google
    // see "Authentication" section in docs for more info
    client_email: CLIENT_EMAIL,
    private_key: PRIVATE_KEY,
  });

  // loads document properties and worksheets
  await doc.loadInfo();
  const sheet = doc.sheetsByTitle[SHEET_TITLE];

  if (!sheet) {
    return -1;
  }

  await sheet.loadCells(`G2:G6`);

  const timestamp = sheet.getCellByA1('G2');
  const totalAssets = sheet.getCellByA1('G3');
  const purchasingPower = sheet.getCellByA1('G4');
  const buyingTokens = sheet.getCellByA1('G5');
  const liveOrders = sheet.getCellByA1('G6');

  timestamp.value = data.timestamp;
  totalAssets.value = data.totalAssets;
  purchasingPower.value = data.purchasingPower;
  buyingTokens.value = data.buyingTokens;
  liveOrders.value = data.liveOrders;

  await sheet.saveUpdatedCells();
  return 0;
};
